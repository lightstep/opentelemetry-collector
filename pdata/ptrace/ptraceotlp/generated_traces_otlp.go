// Copyright The OpenTelemetry Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by "model/internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "go run model/internal/cmd/pdatagen/main.go".

package ptraceotlp

import (
	"go.opentelemetry.io/collector/pdata/internal"
	otlpcollectortrace "go.opentelemetry.io/collector/pdata/internal/data/protogen/collector/trace/v1"
)

// ExportTracePartialSuccess represents the details of a partially successful export request.
//
// This is a reference type, if passed by value and callee modifies it the
// caller will see the modification.
//
// Must use NewExportTracePartialSuccess function to create new instances.
// Important: zero-initialized instance is not valid for use.

type ExportTracePartialSuccess internal.ExportTracePartialSuccess

func newExportTracePartialSuccess(orig *otlpcollectortrace.ExportTracePartialSuccess) ExportTracePartialSuccess {
	return ExportTracePartialSuccess(internal.NewExportTracePartialSuccess(orig))
}

func (ms ExportTracePartialSuccess) getOrig() *otlpcollectortrace.ExportTracePartialSuccess {
	return internal.GetOrigExportTracePartialSuccess(internal.ExportTracePartialSuccess(ms))
}

// NewExportTracePartialSuccess creates a new empty ExportTracePartialSuccess.
//
// This must be used only in testing code. Users should use "AppendEmpty" when part of a Slice,
// OR directly access the member if this is embedded in another struct.
func NewExportTracePartialSuccess() ExportTracePartialSuccess {
	return newExportTracePartialSuccess(&otlpcollectortrace.ExportTracePartialSuccess{})
}

// MoveTo moves all properties from the current struct overriding the destination and
// resetting the current instance to its zero value
func (ms ExportTracePartialSuccess) MoveTo(dest ExportTracePartialSuccess) {
	*dest.getOrig() = *ms.getOrig()
	*ms.getOrig() = otlpcollectortrace.ExportTracePartialSuccess{}
}

// RejectedSpans returns the rejectedspans associated with this ExportTracePartialSuccess.
func (ms ExportTracePartialSuccess) RejectedSpans() int64 {
	return ms.getOrig().RejectedSpans
}

// SetRejectedSpans replaces the rejectedspans associated with this ExportTracePartialSuccess.
func (ms ExportTracePartialSuccess) SetRejectedSpans(v int64) {
	ms.getOrig().RejectedSpans = v
}

// ErrorMessage returns the errormessage associated with this ExportTracePartialSuccess.
func (ms ExportTracePartialSuccess) ErrorMessage() string {
	return ms.getOrig().ErrorMessage
}

// SetErrorMessage replaces the errormessage associated with this ExportTracePartialSuccess.
func (ms ExportTracePartialSuccess) SetErrorMessage(v string) {
	ms.getOrig().ErrorMessage = v
}

// CopyTo copies all properties from the current struct overriding the destination.
func (ms ExportTracePartialSuccess) CopyTo(dest ExportTracePartialSuccess) {
	dest.SetRejectedSpans(ms.RejectedSpans())
	dest.SetErrorMessage(ms.ErrorMessage())
}
