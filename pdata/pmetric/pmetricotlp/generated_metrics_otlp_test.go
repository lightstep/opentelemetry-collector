// Copyright The OpenTelemetry Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by "model/internal/cmd/pdatagen/main.go". DO NOT EDIT.
// To regenerate this file run "go run model/internal/cmd/pdatagen/main.go".

package pmetricotlp

import (
	"testing"

	"github.com/stretchr/testify/assert"

	"go.opentelemetry.io/collector/pdata/internal"
)

func TestExportMetricsPartialSuccess_MoveTo(t *testing.T) {
	ms := ExportMetricsPartialSuccess(internal.GenerateTestExportMetricsPartialSuccess())
	dest := NewExportMetricsPartialSuccess()
	ms.MoveTo(dest)
	assert.Equal(t, NewExportMetricsPartialSuccess(), ms)
	assert.Equal(t, ExportMetricsPartialSuccess(internal.GenerateTestExportMetricsPartialSuccess()), dest)
}

func TestExportMetricsPartialSuccess_CopyTo(t *testing.T) {
	ms := NewExportMetricsPartialSuccess()
	orig := NewExportMetricsPartialSuccess()
	orig.CopyTo(ms)
	assert.Equal(t, orig, ms)
	orig = ExportMetricsPartialSuccess(internal.GenerateTestExportMetricsPartialSuccess())
	orig.CopyTo(ms)
	assert.Equal(t, orig, ms)
}

func TestExportMetricsPartialSuccess_RejectedDataPoints(t *testing.T) {
	ms := NewExportMetricsPartialSuccess()
	assert.Equal(t, int64(0), ms.RejectedDataPoints())
	ms.SetRejectedDataPoints(int64(13))
	assert.Equal(t, int64(13), ms.RejectedDataPoints())
}

func TestExportMetricsPartialSuccess_ErrorMessage(t *testing.T) {
	ms := NewExportMetricsPartialSuccess()
	assert.Equal(t, "", ms.ErrorMessage())
	ms.SetErrorMessage("error message")
	assert.Equal(t, "error message", ms.ErrorMessage())
}
